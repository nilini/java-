1、kafka简介
    kafka提供了类似JMS的特性，但并不是JMS规范的实现。
    是一个消息队列，不仅仅是一个消息队列。
    流处理平台：数据流的传输和处理。

2、基本概念
    Producer: 消息和数据的生产者，向Kafka的一个topic发布消息的进程/代码/服务。
    Consumer: 消息和数据的消费者，订阅数据（topic）并且处理其发布的消息的进程/代码/服务。
    Consumer Group: 逻辑概念，对于同一个topic，会广播给不同的group，一个group中，只有一个
                    consumer可以消费该消息。
    Broker: 物理概念，Kafka集群中的每个Kafka节点。
    Topic：逻辑概念，Kafka消息的类别，对数据进行分区、隔离。
    Partition: 物理概念，Kafka下数据存储的基本单元。一个topic数据会被分散存储到多个Partition，每个Partition是有序的。
    Replication: 同一个Partition可能会有多个Replica，多个Replica之间数据是一样的。
    Replication Leader: 一个Partition的多个Replica上，需要一个Leader负责该Partition上与Producer和Consumer交互。
    ReplicatManager: 负责管理当前broker所有分区和副本的信息，处理KafkaController发起的一些请求，副本状态的切换、
    添加/读取信息等。

3、概念延申
    Partition:
        * 每一个topic被切分为多个partitions。
        * 消费者数目小于或等于partitonde的数目。（每一个消费者会消费一个partition）
        * Broker Group中的每一个Broker保存topic的一个或多个partitions。（多个broker共同保存一份partition）
        * Consumer Group中的仅有一个Consumer读取topic的一个或多个partitions，并且是唯一的Consumer。
    Replication:
        * 当集群中有Broker挂掉的情况，系统可以主动地使Replicas提供服务。
        * 系统默认设置每一个topic的replication系数为1，可以在创建topic时单独设置。
        * Replication的基本单位是topic的Partition。
        * 所有的读和写都从Leader进，Followers只是作为备份。
        * Follower必须能够及时复制Leader的数据。
        * 增加了容错性和可拓展性。

4、Kafka基本结构
