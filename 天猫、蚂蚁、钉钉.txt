【阿里天猫、蚂蚁、钉钉面试题目】
1、微信红包怎么实现。
https://blog.csdn.net/varyall/article/details/78657726
2、海量数据分析。

3、测试职位问的线程安全和非线程安全。

4、HTTP2.0、thrift。
    http:
        协议：超文本传输协议，无状态协议（每次请求都是独立的，通过cookie、session带状态。）。
        状态码：301（永久重定向），302（临时重定向），404（找不到资源），500（服务器错误，代码问题）
        请求方式：get、post、options(跨域预检请求)、put、head、delete
        流程：域名解析、TCP三次握手、发起http请求、服务器响应http请求、浏览器解析资源、渲染
        https：披着SSL外壳的HTTP，利用安全信道加密通信数据。http明文发送。
5、面试电话沟通可能先让自我介绍。

6、分布式事务一致性。
    2pc、3pc
7、nio的底层实现。

8、jvm基础是必问的，jvm GC原理，JVM怎么回收内存。

9、Java是什么。

10、API接口与SDI接口的区别（API是提供给别人的接口）。

11、dubbo如何一条链接并发多个调用。Dubbo的原理，序列化相关问题。

12、用过哪些中间件。

13、做过工作流引擎没有。

14、以前的工作经历，自己觉得出彩的地方（钉钉）

15、线程池的一些原理，锁的机制升降级（天猫、蚂蚁）

16、从系统层面考虑，分布式从哪些纬度考虑（天猫）

17、Hadoop底层怎么实现（天猫）

18、threadLocal，线程池，hashMap/hashTable/coccurentHashMap等（天猫）

19、秒杀系统的设计（天猫）

20、虚拟机，IO相关知识点（天猫）

21、Linux的命令（天猫）

22、一个整形数组，给定一个数，在数组中找出两个数的和等于这个数，并打印出来，我写的时间复杂度高，要求O(n)。（天猫）

23、n个整数，找出连续的m个数加和是最大。（天猫）

24、更重视开源技术（蚂蚁金服上海）

25、数据库锁隐原理（蚂蚁金服网商）

26、1000个线程同时运行，怎么防止不卡（航旅）

27、并列的并发消费问题（航旅）

28、高并发量大的话怎么处理热点，数据等（蚂蚁金服）

29、如何获取一个本地服务器上可用的端口

30、流量控制相关问题（蚂蚁金服）

31、数据库TPS是多少，是否进行测试过（天猫）

32、缓存击穿有哪些方案解决（天猫）

33、Java怎么挖取回收器相关原理（财富）

34、Java的集合都有哪些，都有什么特点（信息平台）

35、分布式锁，redis缓存，spring aop，系统架构图，MySQL的特性（信息平台）

36、场景，同时给10万个人发工资，怎么样设计并发方案，能确保在1分钟内全部发完 打个比方会提出类似的场景（信息平台）
    按不同的耗时，启用相应数量的线程。

【阿里巴巴面试题目】
1、java事件机制包括哪三个部分？分别介绍。
    事件、事件监听器、事件源
2、为什么要使用线程池？

3、线程池有什么作用？

4、说说几种常见的线程池及使用场景。

5、线程池都有哪几种工作队列？

6、怎么理解无界队列和有界队列？

7、线程池中的几种重要的参数及流程说明。

8、什么是反射机制？

9、说说反射机制的作用。

10、反射机制会不会有性能问题？

11、你怎么理解http协议？

12、说说http协议的工作流程。

13、http有哪些请求提交方式？

14、http中的200,302,403,404,500,503都代表什么状态？

15、http get和post有什么区别？

16、你怎么理解cookie和session，有哪些不同点？

17、什么是web缓存？有什么优点？

18、什么是https，说说https的工作原理？

19、什么是http代理服务器，有什么用？

20、什么是虚拟主机及实现原理？

21、什么是Java虚拟机，为什么要使用？

22、说说Java虚拟机的生命周期及体系结构。

23、说一说Java内存区域。

24、什么是分布式系统？

25、分布式系统你会考虑哪些方面？

26、讲一讲TCP协议的三次握手和四次挥手流程。

27、为什么TCP建立连接协议是三次握手，而关闭连接却是四次握手呢？为什么不能用两次握手进行连接？

28、为什么TCP TIME_WAIT状态还需要等2MSL后才能返回到CLOSED状态？

29、什么是DoS、DDoS、DRDoS攻击？如何防御？

30、描述一下Java异常层次结构。

31、什么是检查异常，不受检查异常，运行时异常？并分别举例说明。

32、finally块一定会执行吗？

33、正常情况下，当在try块或catch块中遇到return语句时，finally语句块在方法返回之前还是之后被执行？

34、try、catch、finally语句块的执行顺序。

35、Java虚拟机中，数据类型可以分为哪几类？

36、怎么理解栈、堆？堆中存什么？栈中存什么？

37、为什么要把堆和栈区分出来呢？栈中不是也可以存储数据吗？

38、在Java中，什么是是栈的起始点，同是也是程序的起始点？

39、为什么不把基本类型放堆中呢？

40、Java中的参数传递时传值呢？还是传引用？

41、Java中有没有指针的概念？

42、Java中，栈的大小通过什么参数来设置？

43、一个空Object对象的占多大空间？

44、对象引用类型分为哪几类？

45、讲一讲垃圾回收算法。

46、如何解决内存碎片的问题？

47、如何解决同时存在的对象创建和对象回收问题？

48、讲一讲内存分代及生命周期。

49、什么情况下触发垃圾回收？

50、如何选择合适的垃圾收集算法？

51、JVM中最大堆大小有没有限制？

52、堆大小通过什么参数设置？

53、JVM有哪三种垃圾回收器？

54、吞吐量优先选择什么垃圾回收器？响应时间优先呢？

55、如何进行JVM调优？有哪些方法？

56、如何理解内存泄漏问题？有哪些情况会导致内存泄露？如何解决？

57、从分布式系统部署角度考虑，分哪几层？

58、如何解决业务层的数据访问问题？

59、为了解决数据库服务器的负担，如何做数据库的分布？

60、什么是著名的拜占庭将军问题？

61、为什么说TCP/IP协议是不可靠的？

62、讲讲CAP理念。

63、怎么理解强一致性、单调一致性和最终一致性？

64、分布式系统设计你会考虑哪些策略？

65、最常见的数据分布方式是什么？

66、谈一谈一致性哈希算法。

67、paxos是什么？

68、什么是Lease机制？

69、如何理解选主算法？

70、OSI有哪七层模型？TCP/IP是哪四层模型。

【阿里巴巴面试题目含答案】
1，mysql的三大引擎是啥？
mysql常用的引擎有InnoDB，MyISAM，Memory，默认是InnoDB
InnoDB：磁盘表，支持事务，支持行级锁，B+Tree索引
ps:优点： 具有良好的ACID特性。适用于高并发，更新操作比较多的表。需要使用事务的表。对自动灾难恢复有要求的表。
缺点：读写效率相对MYISAM比较差。占用的磁盘空间比较大。
mysql的4大特性+4种隔离级别：
MyISAM：磁盘表，不支持事务，支持表级锁，B+Tree索引
ps: 优点：占用空间小，处理速度快（相对InnoDB来说）
缺点：不支持事务的完整性和并发性
MEMORY(Heap)：内存表，不支持事务，表级锁，Hash索引，不支持Blob,Text大类型
ps: 优点：速度要求快的，临时数据
缺点：丢失以后，对项目整体没有或者负面影响不大的时候。

2，redis的hash算法用的是啥？
redis应该是使用一致性hash算法---MurmurHash3 算法，具有低碰撞率优点，google改进的版本cityhash也是redis中用到的哈希算法。
现有的主流的大数据系统都是用的 MurmurHash本身或者改进

分布式负载均衡的时候可供选择的负载均衡算法：轮询算法、哈希算法、最少连接算法、相应速度算法、加权算法
redis服务器较多时，数据要分布在不同的服务器，使用一致性哈希算法，target = hash(key)%N，确定服务器。

3，nosql为啥比sql快？
Nosql是非关系型数据库，因为不需要满足关系数据库数据一致性等复杂特性所以速度快；
sql是关系型数据库，功能强大，但是效率上有瓶颈

4，什么是索引为啥nosql没索引？nosql有索引滴
索引分为聚簇索引和非聚簇索引两种，聚簇索引是按照数据存放的物理位置为顺序的，而非聚簇索引就不一样了；聚簇索引能提高多行检索的速度，而非聚簇索引对于单行的检索很快。
聚簇索引：有主键时，根据主键创建聚簇索引；没有主键时，会用一个唯一且不为空的索引列做为主键，成为此表的聚簇索引；如果以上两个都不满足那innodb自己创建一个虚拟的聚集索引
非聚簇索引：非聚簇索引都是辅助索引，像复合索引、前缀索引、唯一索引

5，B+树和B树区别？
https://blog.csdn.net/u013411246/article/details/81088914
https://www.cnblogs.com/ivictor/p/5849061.html

1）B+树只有叶子节点会带有指向记录的指针，而B树所有节点都带有。
2）B+树内部节点的索引项会出现在叶子节点中，B树则不会。
3）B+树的所有叶子节点都是通过指针连接再一起，而B树不会。
B+树的优点：
    1）叶子节点之间通过指针来连接，范围扫面将是十分简单；而对于B树来说，则需要在叶子节点和内部节点不停的往返移动。
    2）非叶子节点不会带上rowid，这样，一个块中可以容纳更多的索引项，一是可以降低树的高度，二是一个内部节点可以定位更多的内部节点。
相同点：
    B树和B+树都是多路搜索树（并不是二叉的）。