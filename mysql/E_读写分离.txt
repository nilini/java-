mysql读写分离
1、架构
    一主多从架构的应用场景：读写分离。
    1）客户端主动做负载均衡，把数据库的连接信息放在客户端的连接层。由客户端来选择后端数据库进行查询。
    2）mysql和客户端之间有一个中间代理层proxy，客户端只连接proxy，由proxy根据请求类型和上下文决定请求的分发路由。

2、目标
    读写分离主要是为了分摊主库的压力。
3、过期读
    “在从库上督导系统的一个过期状态” 的现象，称为 “过期读”。
    解决方案：
        1）强制走主库方案
            对于必须拿到最新结果的请求，强制将其发到主库上；
            对于可以读到旧数据的请求，才将其发到从库上。
        2）sleep方案
            发布内容成功后，先用发布的内容填充，等到用户主动刷新的时候再去执行sql。
        3）判断主备无延迟方案
            1）show slave status结果里的seconds_behind_master参数的值，可以用来衡量主备延迟时间的长短。
            2）对比位点确保主备无延迟。
                Master_Log_File和Read_Master_Log_Pos表示的是读到的主库的最新位点。
                Relay_Master_Log_File和Exec_Master_Log_Pos表示的是备库执行的最新位点。
            3）GTID集合
        4）配合semi-sync方案
        5）等主库位点方案
        6）等GTID方案


