mysql索引
1、查找过程（k为普通索引）
    select * from T where k between 3 and 5
    1、在 k 索引树上找到 k=3 的记录，取得 ID = 300；
    2、再到 ID 索引树查到 ID=300 对应的 R3；
    3、在 k 索引树取下一个值 k=5，取得 ID=500；
    4、再回到 ID 索引树查到 ID=500 对应的 R4；
    5、在 k 索引树取下一个值 k=6，不满足条件，循环结束。
    查询结果所需要的数据只在主键索引上有，所以不得不回表。

2、覆盖索引
    索引k已经“覆盖”了我们的查询需求，我们称为覆盖索引。
    场景：根据身份证号查询市民信息的需求，只要在身份证号上建立索引就够了。但是如果有根据身份证号查询姓名的高频请求，再建立一个（身份证、姓名）的联合索引就很有意义。

3、最左前缀原则
    1）索引项是按照索引定义里面出现的字段顺序排序的。
    2）联合索引的最左N个字段，也就是字符串索引的最左M个字符。
    3）通过调整顺序，可以少维护一个索引，那么这个顺序往往就是需要优先考虑采用的。
    4）如果既有联合查询，又有基于a,b各自的查询，那么就要同时维护 (a,b)、(b)这两个索引。还要考虑空间大小。
4、索引下推(mysql 5.6)
    select * from tuser where name like '张 %' and age=10 and ismale=1;
    这个语句在搜索索引树的时候，只能用到 “张”，找到第一个满足条件的记录，然后往下开始一个个回表，到主键索引上找出数据行，再对比字段值。
    引入索引下推后，可以在索引遍历过程中，对索引中包含的字段先做判断，直接过滤掉不满足条件的记录，减少回表次数。

