抽象工厂模式
围绕一个超级工厂创建其他工厂，该超级工厂又称为其他工厂的工厂。

优点：当一个产品族中的多个对象被设计成一起工作时，它能保证客户端始终只使用同一个产品族中的对象。
缺点：产品族扩展非常困难，要增加一个系列的某一产品，既要在抽象的 Creator 里加代码，又要在具体的里面加代码。


何时使用：系统的产品有多于一个的产品族，而系统只消费其中某一族的产品。
如何解决：在一个产品族里面，定义多个产品。

在工厂方法模式中，有产品接口，具体产品类，工厂接口，具体工厂类，其中具体工厂只生产具体的产品。一个工厂值生产一个配件。
在抽象工厂模式中，有产品接口，具体产品类（某一组，比如某个人），工厂接口（囊括所有产品），具体工厂类（某一个人的工厂，囊括这个人的所有产品）。

总结：
    简单工厂模式违反了最基本的开闭原则，工厂方法模式与抽象工厂模式解决了简单工厂模式的弊端。
    工厂方法模式的工厂个数过多，导致系统庞大。
    抽象工厂模式添加新的产品族很方便。
https://blog.csdn.net/jerry11112/article/details/80618420